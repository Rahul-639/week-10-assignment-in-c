#include <stdio.h>
#include <stdlib.h>
#define MAX 1005;
int maxHistogramArea(int* heights, int n) {
    int stack[MAX], top = -1;
    int maxArea = 0, area, i;
    for (i = 0; i <= n; i++) {
        int h = (i == n) ? 0 : heights[i];
        while (top >= 0 && heights[stack[top]] > h) {
            int height = heights[stack[top--]];
            int width = (top == -1) ? i : (i - stack[top] - 1);
            area = height * width;
            if (area > maxArea) maxArea = area;
        }
        stack[++top] = i;
    }
    return maxArea;
}
int maxRectangle(int mat[][MAX], int R, int C) {
    int heights[MAX] = {0};
    int maxArea = 0;
    for (int i = 0; i < R; i++) {
        for (int j = 0; j < C; j++) {
            if (mat[i][j] == 0) heights[j] = 0;
            else heights[j] += 1;
        }
        int area = maxHistogramArea(heights, C);
        if (area > maxArea) maxArea = area;
    }
    return maxArea;
}
int main() {
    int R, C;
    scanf("%d %d", &R, &C);
    int mat[MAX][MAX];
    for (int i = 0; i < R; i++) {
        for (int j = 0; j < C; j++) {
            scanf("%d", &mat[i][j]);
        }
    }
    printf("%d\n", maxRectangle(mat, R, C));
    return 0;
}
